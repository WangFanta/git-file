
"""
端口转发（Port forwarding），有时被叫做隧道，是安全壳(SSH) 为网络安全通信使用的一种方法。端口转发是转发一个网络端口
从一个网络节点到另一个网络节点的行为，其使一个外部用户从外部经过一个被激活的NAT路由器到达一个在私有内部IP地址（局域网
内部）上的一个端口。
在网吧通过路由器或者代理连接到外网，而在内网建立和运行网络服务器或FTP服务器是没办法使外网用户直接访问的，通过在路由上
的NAT开启建立相应端口转发的映射，你可以指示路由器转发对某一特定网端口（如80 ，为网络服务器或21为FTP服务器） 所有的信
息为本地网络。 这意味着，如果一个外部主机试图通过HTTP访问外网的IP加相应端口，就可访问到相应的内网建立的服务器。 外部
访问此服务器的用户并不知道服务器是处于内部网络上的。 这种方法被广泛应用于网吧或通过NAT共享上网在内网建立服务器的用户。
公安监控系统即通过此方法来监控网吧数据的。 转发端口，比用其它方法更安全更易用， 企业内部可能有很多专业化的服务，
比如 ERP 系统，监控系统， OA 系统， CRM 等等，用户不需要移植或者更新现有的服务而单独申请专用的外部IP地址,只需要简单的
配置一下网关路由的端口转发功能，即可使互联网上的用户使用这些服务。
端口转发一般常常用于虚拟机与宿主机之间通信时使用。最经常用的如：通过linux的ssh方式通信，本机端口转发连接VMware虚拟机。
再者：VirtualBox NAT设置和端口转发等等。

iptables -A INPUT -p tcp --dport 22 -j ACCEPT      允许是accept 不允许是drop d/sport是destination和source的意思
iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT     如果允许ping一下，应该把tcp换成icmp
          -s 192.168.0.3                           只允许其中某一个地址来访问,不安全端口是31337

“/24”表示这个IP的子网为24位,子网掩码是4个8位2进制数组成的,前面有24个1，1是网络地址，0是主机号
a-c类255的递增255.0.0.0  255.255.0.0 255.255.255.0
ip地址和子网掩码做与运算，得到的是网段
IP地址和子网掩码进行与运算，结果是网络地址（即主机号全0是网络地址）
将运算结果中的网络地址不变，主机地址变为1，结果就是广播地址
0的个数位n，则能容纳电脑的ip位2的n次方
"""

"""
DNAT目的地址转换：
目的地址转换的作用是将一组本地内部的地址映射到一组全球地址。通常来说，合法地址的数量比起本地内部的地址数量来要少得多。
RFC1918中的地址保留可以用地址重叠的方式来达到。当一个内部主机第一次放出的数据包通过防火墙时，动态NAT的实现方式与静态NAT相
同,然后这次NAT就以表的形式保留在防火墙中。除非由于某种个原因会引起这次NAT的结束，否则这次NAT就一直保留在防火墙中。引起NA
T结束最常见的原因就是发出连接的主机在预定的时间内一直没有响应，这时空闲计时器就会从表中删除该主机的NAT。
Nat网络地址转换：
当在专用网内部的一些主机本来已经分配到了本地IP地址（即仅在本专用网内使用的专用地址），但现在又想和因特网上的主机通信（并不需
要加密）时，可使用NAT方法。
这种方法需要在专用网连接到因特网的路由器上安装NAT软件。装有NAT软件的路由器叫做NAT路由器，它至少有一个有效的外部全球IP地址。
这样，所有使用本地地址的主机在和外界通信时，都要在NAT路由器上将其本地地址转换成全球IP地址，才能和因特网连接。
NAT的实现方式有三种，即静态转换Static Nat、动态转换Dynamic Nat和端口多路复用OverLoad。
静态转换是指将内部网络的私有IP地址转换为公有IP地址，IP地址对是一对一的，是一成不变的，某个私有IP地址只转换为某个公有IP地址。
借助于静态转换，可以实现外部网络对内部网络中某些特定设备（如服务器）的访问。
动态转换是指将内部网络的私有IP地址转换为公用IP地址时，IP地址是不确定的，是随机的，所有被授权访问上Internet的私有IP地址可随机
转换为任何指定的合法IP地址。也就是说，只要指定哪些内部地址可以进行转换，以及用哪些合法地址作为外部地址时，就可以进行动态转换。
动态转换可以使用多个合法外部地址集。当ISP提供的合法IP地址略少于网络内部的计算机数量时。可以采用动态转换的方式。
端口多路复用（Port address Translation,PAT)是指改变外出数据包的源端口并进行端口转换，即端口地址转换
（PAT，Port Address Translation).采用端口多路复用方式。内部网络的所有主机均可共享一个合法外部IP地址实现对Internet的
访问，从而可以最大限度地节约IP地址资源。同时，又可隐藏网络内部的所有主机，有效避免来自internet的攻击。因此，目前网络中应用最多的
就是端口多路复用方式。
"""

"""
IP分共有IP和私有IP，其中公有IP是全球唯一的，私有IP是本地唯一的，在同一局域网内私有IP不能重复，但不同的局域网是可以设置相同的私有IP的。
192.168.0.1，是私有IP地址，在不同网络里是可以重复的。但一般接入Internet上网，出口都需要是使用公有IP，所以在出口都会做NAT，
就是把私有IP转换成公有IP上网。 
"""

"""
DHCP
（Dynamic Host Configuration Protocol，动态主机配置协议）通常被应用在大型的局域网络环境中，主要作用是集中的管理、分配IP地址，
使网络环境中的主机动态的获得IP地址、Gateway地址、DNS服务器地址等信息，并能够提升地址的使用率。
DHCP协议采用客户端/服务器模型，主机地址的动态分配任务由网络主机驱动。当DHCP服务器接收到来自网络主机申请地址的信息时，才会向网络
主机发送相关的地址配置等信息，以实现网络主机地址信息的动态配置。DHCP具有以下功能：
1. 保证任何IP地址在同一时刻只能由一台DHCP客户机所使用。
2. DHCP应当可以给用户分配永久固定的IP地址。
3. DHCP应当可以同用其他方法获得IP地址的主机共存（如手工配置IP地址的主机）。
4. DHCP服务器应当向现有的BOOTP客户端提供服务。
DHCP有三种机制分配IP地址：
1) 自动分配方式（Automatic Allocation），DHCP服务器为主机指定一个永久性的IP地址，一旦DHCP客户端第一次成功从DHCP服务器端租用到
IP地址后，就可以永久性的使用该地址。
2) 动态分配方式（Dynamic Allocation），DHCP服务器给主机指定一个具有时间限制的IP地址，时间到期或主机明确表示放弃该地址时，该地址
可以被其他主机使用。
3) 手工分配方式（Manual Allocation），客户端的IP地址是由网络管理员指定的，DHCP服务器只是将指定的IP地址告诉客户端主机。
三种地址分配方式中，只有动态分配可以重复使用客户端不再需要的地址。
"""

"""
cd /etc/network/interfaces
auto eth0
iface eth0 inet dhcp  #并使用sudo dhclient eth0来启动
"""

#防火墙
"""
Iptables Linux上常用的防火墙软件

ufw是一个主机端的iptables类防火墙配置工具
sudo ufw enable  开启ufw服务
sudo ufw allow 80 允许外部访问80端口
netstat 用来打印Linux中网络系统的状态信息
grep查询
"""

#跨站请求
CSRF攻击原理比较简单，例如Web A为存在CSRF漏洞的网站，Web B为攻击者构建的恶意网站，User C为Web A网站的合法用户。
用户C打开浏览器，访问受信任网站A，输入用户名和密码请求登录网站A； 
　　
在用户信息通过验证后，网站A产生Cookie信息并返回给浏览器，此时用户登录网站A成功，可以正常发送请求到网站A；并且，此后
从用户浏览器发送请求给网站A时都会默认带上用户的Cookie信息； 　
用户未退出网站A之前，在同一浏览器中，打开一个TAB页访问网站B； 
网站B接收到用户请求后，返回一些攻击性代码，并发出一个请求要求访问第三方站点A； 
浏览器在接收到这些攻击性代码后，根据网站B的请求，在用户不知情的情况下携带Cookie信息，向网站A发出请求。网站A并不
知道该请求其实是由B发起的，所以会根据用户C的Cookie信息以C的权限处理该请求，导致来自网站B的恶意代码被执行。

#XSS 跨站脚本攻击
在搜索框搜索内容，填入“<script>alert('handsome boy')</script>”, 点击搜索。
当前端页面没有对返回的数据进行过滤，直接显示在页面上， 这时就会alert那个字符串出来。

ip netns add test0
ip netns exec test0 ip link add name eth0 type dummy 创建一个虚拟接口
ip netns exec test0 ip link set dev lo up
ip netns exec test0 ip link set dev eth0 up
ip netns exec test0 ip address add 10.0.2.10/24 dev eth0

为什么是三次握手？
“三次握手”的目的是“为了防止已失效的连接请求报文段突然又传送到了服务端，因而产生错误”。 client发出的第一个连接
请求报文段并没有丢失，而是在某个网络结点长时间的滞留了，以致延误到连接释放以后的某个时间才到达server。本来这是
一个早已失效的报文段。但server收到此失效的连接请求报文段后，就误认为是client再次发出的一个新的连接请求。于是就
向client发出确认报文段，同意建立连接。假设不采用“三次握手”，那么只要server发出确认，新的连接就建立了。由于现在
client并没有发出建立连接的请求，因此不会理睬server的确认，也不会向server发送数据。但server却以为新的运输连接已
经建立，并一直等待client发来数据。这样，server的很多资源就白白浪费掉了。采用“三次握手”的办法可以防止上述现象发生。
例如刚才那种情况，client不会向server的确认发出确认。server由于收不到确认，就知道client并没有要求建立连接。主要目
的防止server端一直等待，浪费资源。

TCP和UDP有什么区别？
TCP是传输控制协议，提供的是  面向连接、   可靠的字节流服务。通信双方彼此交换数据前，必须先通过三次握手协议建立连接，之后才能传输数据。
TCP提供   超时重传，丢弃重复数据，检验数据，流量控制  等功能，保证数据能从一端传到另一端。
UDP是用户数据报协议，是一个简单的  面向无连接  的协议。UDP不提供可靠的服务。在数据数据前不用建立连接故而传输速度很快。UDP主要用户流媒体
传输，IP电话等对数据可靠性要求不是很高的场合。

TCP/IP的流量控制  拥塞控制
如果发送方把数据发送得过快，接收方可能会来不及接收，这就会造成数据的丢失。所谓流量控制就是让发送方的发送速率不要太快，
要让接收方来得及接收。

防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。拥塞控制所要做的都有一个前提：网络能够承受现有的网络负荷。
拥塞控制是一个全局性的过程，涉及到所有的主机、路由器，以及与降低网络传输性能有关的所有因素。

几种拥塞控制方法：
慢开始(slow-start )、拥塞避免(congestion avoidance )、快重传( fastretransmit )和快恢复( fastrecovery )。

ARP是地址解析协议
(1)首先，每个主机都会在自己的ARP缓冲区中建立一个ARP列表，以表示IP地址和MAC地址之间的对应关系。
(2)当源主机要发送数据时，首先检查ARP列表中是否有对应IP地址的目的主机的MAC地址，如果有，则直接发送数据，如果没有，
就向本网段的所有主机发送ARP数据包，该数据包包括的内容有：源主机IP地址，源主机MAC地址，目的主机的IP地址。
(3)当本网络的所有主机收到该ARP数据包时，首先检查数据包中的IP地址是否是自己的IP地址，如果不是，则忽略该数据包，如果是，
则首先从数据包中取出源主机的IP和MAC地址写入到ARP列表中，如果已经存在，则覆盖，然后将自己的MAC地址写入ARP响应包中，告诉
源主机自己是它想要找的MAC地址。
(4)源主机收到ARP响应包后。将目的主机的IP和MAC地址写入ARP列表，并利用此信息发送数据。如果源主机一直没有收到ARP响应数据包，
表示ARP查询失败。广播发送ARP请求，单播发送ARP响应。

ICMP协议
用于在IP主机、路由器之间传递控制消息。控制消息是指网络通不通、主机是否可达、路由器是否可用等网络本身的消息。这些控制消息虽然
并不传输用户数据，但是对于用户数据的传递起着重要的作用

网桥的作用
网桥是一个局域网与另一个局域网之间建立连接的桥梁

运输层协议与网络层协议的区别
网络层协议负责的是提供  主机间  的逻辑通信
运输层协议负责的是提供  进程间  的逻辑通信

HTTP的长连接和短连接
HTTP的长连接和短连接本质上是TCP长连接和短连接。HTTP属于应用层协议.
短连接: 浏览器和服务器每进行一次HTTP操作，就建立一次连接，但任务结束就中断连接。
长连接: 当一个网页打开完成后，客户端和服务器之间用于传输HTTP数据的 TCP连接不会关闭，如果客户端再次访问这个服务器上
的网页，会继续使用这一条已经建立的连接。但不会永久保持连接，它有一个保持时间，可以在不同的服务器软件（如Apache）中设定
这个时间。实现长连接要客户端和服务端都支持长连接。
TCP短连接: client向server发起连接请求，server接到请求，然后双方建立连接。client向server发送消息，server回应client，
然后一次读写就完成了，这时候双方任何一个都可以发起close操作，不过一般都是client先发起 close操作.短连接一般只会在 
client/server间传递一次读写操作
TCP长连接: client向server发起连接，server接受client连接，双方建立连接。Client与server完成一次读写之后，它们之间的连接并
不会主动关闭，后续的读写操作会继续使用这个连接。

为什么TIME_WAIT状态还需要等2*MS秒之后才能返回到CLOSED状态
因为虽然双方都同意关闭连接了，而且握手的4个报文也都发送完毕，按理可以直接回到CLOSED状态（就好比从SYN_SENT状态到ESTABLISH
状态那样），但是我们必须假想网络是不可靠的，你无法保证你最后发送的ACK报文一定会被对方收到，就是说对方处于LAST_ACK状态下的
SOCKET可能会因为超时未收到ACK报文，而重发FIN报文，所以这个TIME_WAIT状态的作用就是用来重发可能丢失的ACK报文。

HTTP 、TCP、Socket
TCP/IP代表传输控制协议/网际协议，指的是一系列协组
HTTP本身就是一个协议，是从Web服务器传输超文本到本地浏览器的传送协议
Socket是TCP/IP网络的API其实就是一个门面模式，它把复杂的TCP/IP协议族隐藏在Socket接口后面，对用户来说，一组简单的接口就是全部，
让Socket去组织数据，以符合指定的协议
综上所述：需要IP协议来连接网络;TCP是一种允许我们安全传输数据的机制，使用TCP协议来传输数据的HTTP是Web服务器和客户端使用的
特殊协议。HTTP基于TCP协议，但是却可以使用socket去建立一个TCP连接

                  *******************  http soap rest  ******************* 
http是标准超文本传输协议。使用时对参数进行编码并将参数作为键值对传递，还使用关联的请求语义。每个协议都包含一系列HTTP请求标头
及其他一些信息，定义客户端向服务器请求哪些内容，服务器用一系列HTTP响应标头和所请求的数据进行响应。

SOAP（Simple Object AccessProtocol）简单对象访问协议。它是轻型协议，用于分散的、分布式计算环境中交换信息。SOAP有助于以独立
于平台的方式访问对象、服务和服务器。它借助于XML，提供了HTTP所需的扩展。

REST(Representational State Transfer)一种轻量级的Web Service架构。可以完全通过HTTP协议实现。还可以利用缓存Cache来提高响应
速度，性能、效率和易用性上都优于SOAP协议。REST架构对资源的操作包括获取、创建、修改和删除资源的操作正好对应HTTP协议提供的
GET、POST、PUT和DELETE方法。

安全性：SOAP会好于restful  效率和易用性(REST更胜一筹) REST允许很多不同的数据格式而 SOAP仅支持 XML
